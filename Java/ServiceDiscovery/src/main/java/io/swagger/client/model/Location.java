/*
 * MASAI Service Discovery API
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: v1
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package io.swagger.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;

/**
 * Location information (Search for services within one box area)
 */
@ApiModel(description = "Location information (Search for services within one box area)")
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2018-06-07T16:09:20.617+01:00")
public class Location {
  @SerializedName("minLatitude")
  private Double minLatitude = null;

  @SerializedName("minLongitude")
  private Double minLongitude = null;

  @SerializedName("maxLatitude")
  private Double maxLatitude = null;

  @SerializedName("maxLongitude")
  private Double maxLongitude = null;

  @SerializedName("countries")
  private List<String> countries = null;

  @SerializedName("cities")
  private List<String> cities = null;

  public Location minLatitude(Double minLatitude) {
    this.minLatitude = minLatitude;
    return this;
  }

   /**
   * Bottom left latitude
   * @return minLatitude
  **/
  @ApiModelProperty(value = "Bottom left latitude")
  public Double getMinLatitude() {
    return minLatitude;
  }

  public void setMinLatitude(Double minLatitude) {
    this.minLatitude = minLatitude;
  }

  public Location minLongitude(Double minLongitude) {
    this.minLongitude = minLongitude;
    return this;
  }

   /**
   * Bottom left longitude
   * @return minLongitude
  **/
  @ApiModelProperty(value = "Bottom left longitude")
  public Double getMinLongitude() {
    return minLongitude;
  }

  public void setMinLongitude(Double minLongitude) {
    this.minLongitude = minLongitude;
  }

  public Location maxLatitude(Double maxLatitude) {
    this.maxLatitude = maxLatitude;
    return this;
  }

   /**
   * Top right latitude
   * @return maxLatitude
  **/
  @ApiModelProperty(value = "Top right latitude")
  public Double getMaxLatitude() {
    return maxLatitude;
  }

  public void setMaxLatitude(Double maxLatitude) {
    this.maxLatitude = maxLatitude;
  }

  public Location maxLongitude(Double maxLongitude) {
    this.maxLongitude = maxLongitude;
    return this;
  }

   /**
   * Top right longitude
   * @return maxLongitude
  **/
  @ApiModelProperty(value = "Top right longitude")
  public Double getMaxLongitude() {
    return maxLongitude;
  }

  public void setMaxLongitude(Double maxLongitude) {
    this.maxLongitude = maxLongitude;
  }

  public Location countries(List<String> countries) {
    this.countries = countries;
    return this;
  }

  public Location addCountriesItem(String countriesItem) {
    if (this.countries == null) {
      this.countries = new ArrayList<String>();
    }
    this.countries.add(countriesItem);
    return this;
  }

   /**
   * List of ISO 3166-1 Country Codes
   * @return countries
  **/
  @ApiModelProperty(value = "List of ISO 3166-1 Country Codes")
  public List<String> getCountries() {
    return countries;
  }

  public void setCountries(List<String> countries) {
    this.countries = countries;
  }

  public Location cities(List<String> cities) {
    this.cities = cities;
    return this;
  }

  public Location addCitiesItem(String citiesItem) {
    if (this.cities == null) {
      this.cities = new ArrayList<String>();
    }
    this.cities.add(citiesItem);
    return this;
  }

   /**
   * List of cities to search for
   * @return cities
  **/
  @ApiModelProperty(value = "List of cities to search for")
  public List<String> getCities() {
    return cities;
  }

  public void setCities(List<String> cities) {
    this.cities = cities;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    Location location = (Location) o;
    return Objects.equals(this.minLatitude, location.minLatitude) &&
        Objects.equals(this.minLongitude, location.minLongitude) &&
        Objects.equals(this.maxLatitude, location.maxLatitude) &&
        Objects.equals(this.maxLongitude, location.maxLongitude) &&
        Objects.equals(this.countries, location.countries) &&
        Objects.equals(this.cities, location.cities);
  }

  @Override
  public int hashCode() {
    return Objects.hash(minLatitude, minLongitude, maxLatitude, maxLongitude, countries, cities);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class Location {\n");
    
    sb.append("    minLatitude: ").append(toIndentedString(minLatitude)).append("\n");
    sb.append("    minLongitude: ").append(toIndentedString(minLongitude)).append("\n");
    sb.append("    maxLatitude: ").append(toIndentedString(maxLatitude)).append("\n");
    sb.append("    maxLongitude: ").append(toIndentedString(maxLongitude)).append("\n");
    sb.append("    countries: ").append(toIndentedString(countries)).append("\n");
    sb.append("    cities: ").append(toIndentedString(cities)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

