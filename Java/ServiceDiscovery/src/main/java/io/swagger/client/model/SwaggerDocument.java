/*
 * MASAI Service Discovery API
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: v1
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package io.swagger.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import io.swagger.client.model.JsonSchema4;
import io.swagger.client.model.SwaggerDocumentPaths;
import io.swagger.client.model.SwaggerExternalDocumentation;
import io.swagger.client.model.SwaggerInfo;
import io.swagger.client.model.SwaggerParameter;
import io.swagger.client.model.SwaggerResponse;
import io.swagger.client.model.SwaggerSecurityScheme;
import io.swagger.client.model.SwaggerTag;
import java.io.IOException;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * Describes a JSON web service.
 */
@ApiModel(description = "Describes a JSON web service.")
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2018-06-07T16:09:20.617+01:00")
public class SwaggerDocument {
  @SerializedName("x-generator")
  private String xGenerator = null;

  @SerializedName("swagger")
  private String swagger = null;

  @SerializedName("info")
  private SwaggerInfo info = null;

  @SerializedName("host")
  private String host = null;

  @SerializedName("basePath")
  private String basePath = null;

  /**
   * Gets or Sets schemes
   */
  @JsonAdapter(SchemesEnum.Adapter.class)
  public enum SchemesEnum {
    UNDEFINED("undefined"),
    
    HTTP("http"),
    
    HTTPS("https"),
    
    WS("ws"),
    
    WSS("wss");

    private String value;

    SchemesEnum(String value) {
      this.value = value;
    }

    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    public static SchemesEnum fromValue(String text) {
      for (SchemesEnum b : SchemesEnum.values()) {
        if (String.valueOf(b.value).equals(text)) {
          return b;
        }
      }
      return null;
    }

    public static class Adapter extends TypeAdapter<SchemesEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final SchemesEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public SchemesEnum read(final JsonReader jsonReader) throws IOException {
        String value = jsonReader.nextString();
        return SchemesEnum.fromValue(String.valueOf(value));
      }
    }
  }

  @SerializedName("schemes")
  private List<SchemesEnum> schemes = null;

  @SerializedName("consumes")
  private List<String> consumes = null;

  @SerializedName("produces")
  private List<String> produces = null;

  @SerializedName("paths")
  private Map<String, SwaggerDocumentPaths> paths = null;

  @SerializedName("definitions")
  private Map<String, JsonSchema4> definitions = null;

  @SerializedName("parameters")
  private Map<String, SwaggerParameter> parameters = null;

  @SerializedName("responses")
  private Map<String, SwaggerResponse> responses = null;

  @SerializedName("securityDefinitions")
  private Map<String, SwaggerSecurityScheme> securityDefinitions = null;

  @SerializedName("security")
  private List<Map<String, List<String>>> security = null;

  @SerializedName("tags")
  private List<SwaggerTag> tags = null;

  @SerializedName("externalDocs")
  private SwaggerExternalDocumentation externalDocs = null;

  public SwaggerDocument xGenerator(String xGenerator) {
    this.xGenerator = xGenerator;
    return this;
  }

   /**
   * Gets or sets the Swagger generator information.
   * @return xGenerator
  **/
  @ApiModelProperty(value = "Gets or sets the Swagger generator information.")
  public String getXGenerator() {
    return xGenerator;
  }

  public void setXGenerator(String xGenerator) {
    this.xGenerator = xGenerator;
  }

  public SwaggerDocument swagger(String swagger) {
    this.swagger = swagger;
    return this;
  }

   /**
   * Gets or sets the Swagger specification version being used.
   * @return swagger
  **/
  @ApiModelProperty(value = "Gets or sets the Swagger specification version being used.")
  public String getSwagger() {
    return swagger;
  }

  public void setSwagger(String swagger) {
    this.swagger = swagger;
  }

  public SwaggerDocument info(SwaggerInfo info) {
    this.info = info;
    return this;
  }

   /**
   * Gets or sets the metadata about the API.
   * @return info
  **/
  @ApiModelProperty(value = "Gets or sets the metadata about the API.")
  public SwaggerInfo getInfo() {
    return info;
  }

  public void setInfo(SwaggerInfo info) {
    this.info = info;
  }

  public SwaggerDocument host(String host) {
    this.host = host;
    return this;
  }

   /**
   * Gets or sets the host (name or ip) serving the API.
   * @return host
  **/
  @ApiModelProperty(value = "Gets or sets the host (name or ip) serving the API.")
  public String getHost() {
    return host;
  }

  public void setHost(String host) {
    this.host = host;
  }

  public SwaggerDocument basePath(String basePath) {
    this.basePath = basePath;
    return this;
  }

   /**
   * Gets or sets the base path on which the API is served, which is relative to the {NSwag.SwaggerDocument.Host}.
   * @return basePath
  **/
  @ApiModelProperty(value = "Gets or sets the base path on which the API is served, which is relative to the {NSwag.SwaggerDocument.Host}.")
  public String getBasePath() {
    return basePath;
  }

  public void setBasePath(String basePath) {
    this.basePath = basePath;
  }

  public SwaggerDocument schemes(List<SchemesEnum> schemes) {
    this.schemes = schemes;
    return this;
  }

  public SwaggerDocument addSchemesItem(SchemesEnum schemesItem) {
    if (this.schemes == null) {
      this.schemes = new ArrayList<SchemesEnum>();
    }
    this.schemes.add(schemesItem);
    return this;
  }

   /**
   * Gets or sets the schemes.
   * @return schemes
  **/
  @ApiModelProperty(value = "Gets or sets the schemes.")
  public List<SchemesEnum> getSchemes() {
    return schemes;
  }

  public void setSchemes(List<SchemesEnum> schemes) {
    this.schemes = schemes;
  }

  public SwaggerDocument consumes(List<String> consumes) {
    this.consumes = consumes;
    return this;
  }

  public SwaggerDocument addConsumesItem(String consumesItem) {
    if (this.consumes == null) {
      this.consumes = new ArrayList<String>();
    }
    this.consumes.add(consumesItem);
    return this;
  }

   /**
   * Gets or sets a list of MIME types the operation can consume.
   * @return consumes
  **/
  @ApiModelProperty(value = "Gets or sets a list of MIME types the operation can consume.")
  public List<String> getConsumes() {
    return consumes;
  }

  public void setConsumes(List<String> consumes) {
    this.consumes = consumes;
  }

  public SwaggerDocument produces(List<String> produces) {
    this.produces = produces;
    return this;
  }

  public SwaggerDocument addProducesItem(String producesItem) {
    if (this.produces == null) {
      this.produces = new ArrayList<String>();
    }
    this.produces.add(producesItem);
    return this;
  }

   /**
   * Gets or sets a list of MIME types the operation can produce.
   * @return produces
  **/
  @ApiModelProperty(value = "Gets or sets a list of MIME types the operation can produce.")
  public List<String> getProduces() {
    return produces;
  }

  public void setProduces(List<String> produces) {
    this.produces = produces;
  }

  public SwaggerDocument paths(Map<String, SwaggerDocumentPaths> paths) {
    this.paths = paths;
    return this;
  }

  public SwaggerDocument putPathsItem(String key, SwaggerDocumentPaths pathsItem) {
    if (this.paths == null) {
      this.paths = new HashMap<String, SwaggerDocumentPaths>();
    }
    this.paths.put(key, pathsItem);
    return this;
  }

   /**
   * Gets or sets the operations.
   * @return paths
  **/
  @ApiModelProperty(value = "Gets or sets the operations.")
  public Map<String, SwaggerDocumentPaths> getPaths() {
    return paths;
  }

  public void setPaths(Map<String, SwaggerDocumentPaths> paths) {
    this.paths = paths;
  }

  public SwaggerDocument definitions(Map<String, JsonSchema4> definitions) {
    this.definitions = definitions;
    return this;
  }

  public SwaggerDocument putDefinitionsItem(String key, JsonSchema4 definitionsItem) {
    if (this.definitions == null) {
      this.definitions = new HashMap<String, JsonSchema4>();
    }
    this.definitions.put(key, definitionsItem);
    return this;
  }

   /**
   * Gets or sets the types.
   * @return definitions
  **/
  @ApiModelProperty(value = "Gets or sets the types.")
  public Map<String, JsonSchema4> getDefinitions() {
    return definitions;
  }

  public void setDefinitions(Map<String, JsonSchema4> definitions) {
    this.definitions = definitions;
  }

  public SwaggerDocument parameters(Map<String, SwaggerParameter> parameters) {
    this.parameters = parameters;
    return this;
  }

  public SwaggerDocument putParametersItem(String key, SwaggerParameter parametersItem) {
    if (this.parameters == null) {
      this.parameters = new HashMap<String, SwaggerParameter>();
    }
    this.parameters.put(key, parametersItem);
    return this;
  }

   /**
   * Gets or sets the parameters which can be used for all operations.
   * @return parameters
  **/
  @ApiModelProperty(value = "Gets or sets the parameters which can be used for all operations.")
  public Map<String, SwaggerParameter> getParameters() {
    return parameters;
  }

  public void setParameters(Map<String, SwaggerParameter> parameters) {
    this.parameters = parameters;
  }

  public SwaggerDocument responses(Map<String, SwaggerResponse> responses) {
    this.responses = responses;
    return this;
  }

  public SwaggerDocument putResponsesItem(String key, SwaggerResponse responsesItem) {
    if (this.responses == null) {
      this.responses = new HashMap<String, SwaggerResponse>();
    }
    this.responses.put(key, responsesItem);
    return this;
  }

   /**
   * Gets or sets the responses which can be used for all operations.
   * @return responses
  **/
  @ApiModelProperty(value = "Gets or sets the responses which can be used for all operations.")
  public Map<String, SwaggerResponse> getResponses() {
    return responses;
  }

  public void setResponses(Map<String, SwaggerResponse> responses) {
    this.responses = responses;
  }

  public SwaggerDocument securityDefinitions(Map<String, SwaggerSecurityScheme> securityDefinitions) {
    this.securityDefinitions = securityDefinitions;
    return this;
  }

  public SwaggerDocument putSecurityDefinitionsItem(String key, SwaggerSecurityScheme securityDefinitionsItem) {
    if (this.securityDefinitions == null) {
      this.securityDefinitions = new HashMap<String, SwaggerSecurityScheme>();
    }
    this.securityDefinitions.put(key, securityDefinitionsItem);
    return this;
  }

   /**
   * Gets or sets the security definitions.
   * @return securityDefinitions
  **/
  @ApiModelProperty(value = "Gets or sets the security definitions.")
  public Map<String, SwaggerSecurityScheme> getSecurityDefinitions() {
    return securityDefinitions;
  }

  public void setSecurityDefinitions(Map<String, SwaggerSecurityScheme> securityDefinitions) {
    this.securityDefinitions = securityDefinitions;
  }

  public SwaggerDocument security(List<Map<String, List<String>>> security) {
    this.security = security;
    return this;
  }

  public SwaggerDocument addSecurityItem(Map<String, List<String>> securityItem) {
    if (this.security == null) {
      this.security = new ArrayList<Map<String, List<String>>>();
    }
    this.security.add(securityItem);
    return this;
  }

   /**
   * Gets or sets a security description.
   * @return security
  **/
  @ApiModelProperty(value = "Gets or sets a security description.")
  public List<Map<String, List<String>>> getSecurity() {
    return security;
  }

  public void setSecurity(List<Map<String, List<String>>> security) {
    this.security = security;
  }

  public SwaggerDocument tags(List<SwaggerTag> tags) {
    this.tags = tags;
    return this;
  }

  public SwaggerDocument addTagsItem(SwaggerTag tagsItem) {
    if (this.tags == null) {
      this.tags = new ArrayList<SwaggerTag>();
    }
    this.tags.add(tagsItem);
    return this;
  }

   /**
   * Gets or sets the description.
   * @return tags
  **/
  @ApiModelProperty(value = "Gets or sets the description.")
  public List<SwaggerTag> getTags() {
    return tags;
  }

  public void setTags(List<SwaggerTag> tags) {
    this.tags = tags;
  }

  public SwaggerDocument externalDocs(SwaggerExternalDocumentation externalDocs) {
    this.externalDocs = externalDocs;
    return this;
  }

   /**
   * Gets or sets the external documentation.
   * @return externalDocs
  **/
  @ApiModelProperty(value = "Gets or sets the external documentation.")
  public SwaggerExternalDocumentation getExternalDocs() {
    return externalDocs;
  }

  public void setExternalDocs(SwaggerExternalDocumentation externalDocs) {
    this.externalDocs = externalDocs;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    SwaggerDocument swaggerDocument = (SwaggerDocument) o;
    return Objects.equals(this.xGenerator, swaggerDocument.xGenerator) &&
        Objects.equals(this.swagger, swaggerDocument.swagger) &&
        Objects.equals(this.info, swaggerDocument.info) &&
        Objects.equals(this.host, swaggerDocument.host) &&
        Objects.equals(this.basePath, swaggerDocument.basePath) &&
        Objects.equals(this.schemes, swaggerDocument.schemes) &&
        Objects.equals(this.consumes, swaggerDocument.consumes) &&
        Objects.equals(this.produces, swaggerDocument.produces) &&
        Objects.equals(this.paths, swaggerDocument.paths) &&
        Objects.equals(this.definitions, swaggerDocument.definitions) &&
        Objects.equals(this.parameters, swaggerDocument.parameters) &&
        Objects.equals(this.responses, swaggerDocument.responses) &&
        Objects.equals(this.securityDefinitions, swaggerDocument.securityDefinitions) &&
        Objects.equals(this.security, swaggerDocument.security) &&
        Objects.equals(this.tags, swaggerDocument.tags) &&
        Objects.equals(this.externalDocs, swaggerDocument.externalDocs);
  }

  @Override
  public int hashCode() {
    return Objects.hash(xGenerator, swagger, info, host, basePath, schemes, consumes, produces, paths, definitions, parameters, responses, securityDefinitions, security, tags, externalDocs);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class SwaggerDocument {\n");
    
    sb.append("    xGenerator: ").append(toIndentedString(xGenerator)).append("\n");
    sb.append("    swagger: ").append(toIndentedString(swagger)).append("\n");
    sb.append("    info: ").append(toIndentedString(info)).append("\n");
    sb.append("    host: ").append(toIndentedString(host)).append("\n");
    sb.append("    basePath: ").append(toIndentedString(basePath)).append("\n");
    sb.append("    schemes: ").append(toIndentedString(schemes)).append("\n");
    sb.append("    consumes: ").append(toIndentedString(consumes)).append("\n");
    sb.append("    produces: ").append(toIndentedString(produces)).append("\n");
    sb.append("    paths: ").append(toIndentedString(paths)).append("\n");
    sb.append("    definitions: ").append(toIndentedString(definitions)).append("\n");
    sb.append("    parameters: ").append(toIndentedString(parameters)).append("\n");
    sb.append("    responses: ").append(toIndentedString(responses)).append("\n");
    sb.append("    securityDefinitions: ").append(toIndentedString(securityDefinitions)).append("\n");
    sb.append("    security: ").append(toIndentedString(security)).append("\n");
    sb.append("    tags: ").append(toIndentedString(tags)).append("\n");
    sb.append("    externalDocs: ").append(toIndentedString(externalDocs)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

