/*
 * MASAI Service Discovery API
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: v1
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package io.swagger.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import io.swagger.client.model.JsonSchema4;
import io.swagger.client.model.JsonXmlObject;
import java.io.IOException;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * JsonSchema4
 */
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2018-06-07T16:09:20.617+01:00")
public class JsonSchema4 {
  @SerializedName("$schema")
  private String schema = null;

  @SerializedName("id")
  private String id = null;

  @SerializedName("title")
  private String title = null;

  @SerializedName("type")
  private Object type = null;

  @SerializedName("discriminator")
  private String discriminator = null;

  @SerializedName("description")
  private String description = null;

  @SerializedName("schemaReferencePath")
  private String schemaReferencePath = null;

  @SerializedName("format")
  private String format = null;

  @SerializedName("default")
  private Object _default = null;

  @SerializedName("multipleOf")
  private Double multipleOf = null;

  @SerializedName("maximum")
  private Double maximum = null;

  @SerializedName("exclusiveMaximum")
  private Boolean exclusiveMaximum = null;

  @SerializedName("minimum")
  private Double minimum = null;

  @SerializedName("exclusiveMinimum")
  private Boolean exclusiveMinimum = null;

  @SerializedName("maxLength")
  private Integer maxLength = null;

  @SerializedName("minLength")
  private Integer minLength = null;

  @SerializedName("pattern")
  private String pattern = null;

  @SerializedName("maxItems")
  private Integer maxItems = null;

  @SerializedName("minItems")
  private Integer minItems = null;

  @SerializedName("uniqueItems")
  private Boolean uniqueItems = null;

  @SerializedName("maxProperties")
  private Integer maxProperties = null;

  @SerializedName("minProperties")
  private Integer minProperties = null;

  @SerializedName("xml")
  private JsonXmlObject xml = null;

  @SerializedName("not")
  private JsonSchema4 not = null;

  @SerializedName("additionalItems")
  private Object additionalItems = null;

  @SerializedName("additionalProperties")
  private Object additionalProperties = null;

  @SerializedName("items")
  private Object items = null;

  @SerializedName("required")
  private List<String> required = null;

  @SerializedName("properties")
  private Map<String, JsonSchema4> properties = null;

  @SerializedName("patternProperties")
  private Map<String, JsonSchema4> patternProperties = null;

  @SerializedName("definitions")
  private Map<String, JsonSchema4> definitions = null;

  @SerializedName("x-enumNames")
  private List<String> xEnumNames = null;

  @SerializedName("enum")
  private List<Object> _enum = null;

  @SerializedName("allOf")
  private List<JsonSchema4> allOf = null;

  @SerializedName("anyOf")
  private List<JsonSchema4> anyOf = null;

  @SerializedName("oneOf")
  private List<JsonSchema4> oneOf = null;

  public JsonSchema4 schema(String schema) {
    this.schema = schema;
    return this;
  }

   /**
   * Get schema
   * @return schema
  **/
  @ApiModelProperty(value = "")
  public String getSchema() {
    return schema;
  }

  public void setSchema(String schema) {
    this.schema = schema;
  }

  public JsonSchema4 id(String id) {
    this.id = id;
    return this;
  }

   /**
   * Get id
   * @return id
  **/
  @ApiModelProperty(value = "")
  public String getId() {
    return id;
  }

  public void setId(String id) {
    this.id = id;
  }

  public JsonSchema4 title(String title) {
    this.title = title;
    return this;
  }

   /**
   * Get title
   * @return title
  **/
  @ApiModelProperty(value = "")
  public String getTitle() {
    return title;
  }

  public void setTitle(String title) {
    this.title = title;
  }

  public JsonSchema4 type(Object type) {
    this.type = type;
    return this;
  }

   /**
   * Get type
   * @return type
  **/
  @ApiModelProperty(value = "")
  public Object getType() {
    return type;
  }

  public void setType(Object type) {
    this.type = type;
  }

  public JsonSchema4 discriminator(String discriminator) {
    this.discriminator = discriminator;
    return this;
  }

   /**
   * Get discriminator
   * @return discriminator
  **/
  @ApiModelProperty(value = "")
  public String getDiscriminator() {
    return discriminator;
  }

  public void setDiscriminator(String discriminator) {
    this.discriminator = discriminator;
  }

  public JsonSchema4 description(String description) {
    this.description = description;
    return this;
  }

   /**
   * Get description
   * @return description
  **/
  @ApiModelProperty(value = "")
  public String getDescription() {
    return description;
  }

  public void setDescription(String description) {
    this.description = description;
  }

  public JsonSchema4 schemaReferencePath(String schemaReferencePath) {
    this.schemaReferencePath = schemaReferencePath;
    return this;
  }

   /**
   * Get schemaReferencePath
   * @return schemaReferencePath
  **/
  @ApiModelProperty(value = "")
  public String getSchemaReferencePath() {
    return schemaReferencePath;
  }

  public void setSchemaReferencePath(String schemaReferencePath) {
    this.schemaReferencePath = schemaReferencePath;
  }

  public JsonSchema4 format(String format) {
    this.format = format;
    return this;
  }

   /**
   * Get format
   * @return format
  **/
  @ApiModelProperty(value = "")
  public String getFormat() {
    return format;
  }

  public void setFormat(String format) {
    this.format = format;
  }

  public JsonSchema4 _default(Object _default) {
    this._default = _default;
    return this;
  }

   /**
   * Get _default
   * @return _default
  **/
  @ApiModelProperty(value = "")
  public Object getDefault() {
    return _default;
  }

  public void setDefault(Object _default) {
    this._default = _default;
  }

  public JsonSchema4 multipleOf(Double multipleOf) {
    this.multipleOf = multipleOf;
    return this;
  }

   /**
   * Get multipleOf
   * @return multipleOf
  **/
  @ApiModelProperty(value = "")
  public Double getMultipleOf() {
    return multipleOf;
  }

  public void setMultipleOf(Double multipleOf) {
    this.multipleOf = multipleOf;
  }

  public JsonSchema4 maximum(Double maximum) {
    this.maximum = maximum;
    return this;
  }

   /**
   * Get maximum
   * @return maximum
  **/
  @ApiModelProperty(value = "")
  public Double getMaximum() {
    return maximum;
  }

  public void setMaximum(Double maximum) {
    this.maximum = maximum;
  }

  public JsonSchema4 exclusiveMaximum(Boolean exclusiveMaximum) {
    this.exclusiveMaximum = exclusiveMaximum;
    return this;
  }

   /**
   * Get exclusiveMaximum
   * @return exclusiveMaximum
  **/
  @ApiModelProperty(value = "")
  public Boolean isExclusiveMaximum() {
    return exclusiveMaximum;
  }

  public void setExclusiveMaximum(Boolean exclusiveMaximum) {
    this.exclusiveMaximum = exclusiveMaximum;
  }

  public JsonSchema4 minimum(Double minimum) {
    this.minimum = minimum;
    return this;
  }

   /**
   * Get minimum
   * @return minimum
  **/
  @ApiModelProperty(value = "")
  public Double getMinimum() {
    return minimum;
  }

  public void setMinimum(Double minimum) {
    this.minimum = minimum;
  }

  public JsonSchema4 exclusiveMinimum(Boolean exclusiveMinimum) {
    this.exclusiveMinimum = exclusiveMinimum;
    return this;
  }

   /**
   * Get exclusiveMinimum
   * @return exclusiveMinimum
  **/
  @ApiModelProperty(value = "")
  public Boolean isExclusiveMinimum() {
    return exclusiveMinimum;
  }

  public void setExclusiveMinimum(Boolean exclusiveMinimum) {
    this.exclusiveMinimum = exclusiveMinimum;
  }

  public JsonSchema4 maxLength(Integer maxLength) {
    this.maxLength = maxLength;
    return this;
  }

   /**
   * Get maxLength
   * @return maxLength
  **/
  @ApiModelProperty(value = "")
  public Integer getMaxLength() {
    return maxLength;
  }

  public void setMaxLength(Integer maxLength) {
    this.maxLength = maxLength;
  }

  public JsonSchema4 minLength(Integer minLength) {
    this.minLength = minLength;
    return this;
  }

   /**
   * Get minLength
   * @return minLength
  **/
  @ApiModelProperty(value = "")
  public Integer getMinLength() {
    return minLength;
  }

  public void setMinLength(Integer minLength) {
    this.minLength = minLength;
  }

  public JsonSchema4 pattern(String pattern) {
    this.pattern = pattern;
    return this;
  }

   /**
   * Get pattern
   * @return pattern
  **/
  @ApiModelProperty(value = "")
  public String getPattern() {
    return pattern;
  }

  public void setPattern(String pattern) {
    this.pattern = pattern;
  }

  public JsonSchema4 maxItems(Integer maxItems) {
    this.maxItems = maxItems;
    return this;
  }

   /**
   * Get maxItems
   * @return maxItems
  **/
  @ApiModelProperty(value = "")
  public Integer getMaxItems() {
    return maxItems;
  }

  public void setMaxItems(Integer maxItems) {
    this.maxItems = maxItems;
  }

  public JsonSchema4 minItems(Integer minItems) {
    this.minItems = minItems;
    return this;
  }

   /**
   * Get minItems
   * @return minItems
  **/
  @ApiModelProperty(value = "")
  public Integer getMinItems() {
    return minItems;
  }

  public void setMinItems(Integer minItems) {
    this.minItems = minItems;
  }

  public JsonSchema4 uniqueItems(Boolean uniqueItems) {
    this.uniqueItems = uniqueItems;
    return this;
  }

   /**
   * Get uniqueItems
   * @return uniqueItems
  **/
  @ApiModelProperty(value = "")
  public Boolean isUniqueItems() {
    return uniqueItems;
  }

  public void setUniqueItems(Boolean uniqueItems) {
    this.uniqueItems = uniqueItems;
  }

  public JsonSchema4 maxProperties(Integer maxProperties) {
    this.maxProperties = maxProperties;
    return this;
  }

   /**
   * Get maxProperties
   * @return maxProperties
  **/
  @ApiModelProperty(value = "")
  public Integer getMaxProperties() {
    return maxProperties;
  }

  public void setMaxProperties(Integer maxProperties) {
    this.maxProperties = maxProperties;
  }

  public JsonSchema4 minProperties(Integer minProperties) {
    this.minProperties = minProperties;
    return this;
  }

   /**
   * Get minProperties
   * @return minProperties
  **/
  @ApiModelProperty(value = "")
  public Integer getMinProperties() {
    return minProperties;
  }

  public void setMinProperties(Integer minProperties) {
    this.minProperties = minProperties;
  }

  public JsonSchema4 xml(JsonXmlObject xml) {
    this.xml = xml;
    return this;
  }

   /**
   * Get xml
   * @return xml
  **/
  @ApiModelProperty(value = "")
  public JsonXmlObject getXml() {
    return xml;
  }

  public void setXml(JsonXmlObject xml) {
    this.xml = xml;
  }

  public JsonSchema4 not(JsonSchema4 not) {
    this.not = not;
    return this;
  }

   /**
   * Get not
   * @return not
  **/
  @ApiModelProperty(value = "")
  public JsonSchema4 getNot() {
    return not;
  }

  public void setNot(JsonSchema4 not) {
    this.not = not;
  }

  public JsonSchema4 additionalItems(Object additionalItems) {
    this.additionalItems = additionalItems;
    return this;
  }

   /**
   * Get additionalItems
   * @return additionalItems
  **/
  @ApiModelProperty(value = "")
  public Object getAdditionalItems() {
    return additionalItems;
  }

  public void setAdditionalItems(Object additionalItems) {
    this.additionalItems = additionalItems;
  }

  public JsonSchema4 additionalProperties(Object additionalProperties) {
    this.additionalProperties = additionalProperties;
    return this;
  }

   /**
   * Get additionalProperties
   * @return additionalProperties
  **/
  @ApiModelProperty(value = "")
  public Object getAdditionalProperties() {
    return additionalProperties;
  }

  public void setAdditionalProperties(Object additionalProperties) {
    this.additionalProperties = additionalProperties;
  }

  public JsonSchema4 items(Object items) {
    this.items = items;
    return this;
  }

   /**
   * Get items
   * @return items
  **/
  @ApiModelProperty(value = "")
  public Object getItems() {
    return items;
  }

  public void setItems(Object items) {
    this.items = items;
  }

  public JsonSchema4 required(List<String> required) {
    this.required = required;
    return this;
  }

  public JsonSchema4 addRequiredItem(String requiredItem) {
    if (this.required == null) {
      this.required = new ArrayList<String>();
    }
    this.required.add(requiredItem);
    return this;
  }

   /**
   * Get required
   * @return required
  **/
  @ApiModelProperty(value = "")
  public List<String> getRequired() {
    return required;
  }

  public void setRequired(List<String> required) {
    this.required = required;
  }

  public JsonSchema4 properties(Map<String, JsonSchema4> properties) {
    this.properties = properties;
    return this;
  }

  public JsonSchema4 putPropertiesItem(String key, JsonSchema4 propertiesItem) {
    if (this.properties == null) {
      this.properties = new HashMap<String, JsonSchema4>();
    }
    this.properties.put(key, propertiesItem);
    return this;
  }

   /**
   * Get properties
   * @return properties
  **/
  @ApiModelProperty(value = "")
  public Map<String, JsonSchema4> getProperties() {
    return properties;
  }

  public void setProperties(Map<String, JsonSchema4> properties) {
    this.properties = properties;
  }

  public JsonSchema4 patternProperties(Map<String, JsonSchema4> patternProperties) {
    this.patternProperties = patternProperties;
    return this;
  }

  public JsonSchema4 putPatternPropertiesItem(String key, JsonSchema4 patternPropertiesItem) {
    if (this.patternProperties == null) {
      this.patternProperties = new HashMap<String, JsonSchema4>();
    }
    this.patternProperties.put(key, patternPropertiesItem);
    return this;
  }

   /**
   * Get patternProperties
   * @return patternProperties
  **/
  @ApiModelProperty(value = "")
  public Map<String, JsonSchema4> getPatternProperties() {
    return patternProperties;
  }

  public void setPatternProperties(Map<String, JsonSchema4> patternProperties) {
    this.patternProperties = patternProperties;
  }

  public JsonSchema4 definitions(Map<String, JsonSchema4> definitions) {
    this.definitions = definitions;
    return this;
  }

  public JsonSchema4 putDefinitionsItem(String key, JsonSchema4 definitionsItem) {
    if (this.definitions == null) {
      this.definitions = new HashMap<String, JsonSchema4>();
    }
    this.definitions.put(key, definitionsItem);
    return this;
  }

   /**
   * Get definitions
   * @return definitions
  **/
  @ApiModelProperty(value = "")
  public Map<String, JsonSchema4> getDefinitions() {
    return definitions;
  }

  public void setDefinitions(Map<String, JsonSchema4> definitions) {
    this.definitions = definitions;
  }

  public JsonSchema4 xEnumNames(List<String> xEnumNames) {
    this.xEnumNames = xEnumNames;
    return this;
  }

  public JsonSchema4 addXEnumNamesItem(String xEnumNamesItem) {
    if (this.xEnumNames == null) {
      this.xEnumNames = new ArrayList<String>();
    }
    this.xEnumNames.add(xEnumNamesItem);
    return this;
  }

   /**
   * Get xEnumNames
   * @return xEnumNames
  **/
  @ApiModelProperty(value = "")
  public List<String> getXEnumNames() {
    return xEnumNames;
  }

  public void setXEnumNames(List<String> xEnumNames) {
    this.xEnumNames = xEnumNames;
  }

  public JsonSchema4 _enum(List<Object> _enum) {
    this._enum = _enum;
    return this;
  }

  public JsonSchema4 addEnumItem(Object _enumItem) {
    if (this._enum == null) {
      this._enum = new ArrayList<Object>();
    }
    this._enum.add(_enumItem);
    return this;
  }

   /**
   * Get _enum
   * @return _enum
  **/
  @ApiModelProperty(value = "")
  public List<Object> getEnum() {
    return _enum;
  }

  public void setEnum(List<Object> _enum) {
    this._enum = _enum;
  }

  public JsonSchema4 allOf(List<JsonSchema4> allOf) {
    this.allOf = allOf;
    return this;
  }

  public JsonSchema4 addAllOfItem(JsonSchema4 allOfItem) {
    if (this.allOf == null) {
      this.allOf = new ArrayList<JsonSchema4>();
    }
    this.allOf.add(allOfItem);
    return this;
  }

   /**
   * Get allOf
   * @return allOf
  **/
  @ApiModelProperty(value = "")
  public List<JsonSchema4> getAllOf() {
    return allOf;
  }

  public void setAllOf(List<JsonSchema4> allOf) {
    this.allOf = allOf;
  }

  public JsonSchema4 anyOf(List<JsonSchema4> anyOf) {
    this.anyOf = anyOf;
    return this;
  }

  public JsonSchema4 addAnyOfItem(JsonSchema4 anyOfItem) {
    if (this.anyOf == null) {
      this.anyOf = new ArrayList<JsonSchema4>();
    }
    this.anyOf.add(anyOfItem);
    return this;
  }

   /**
   * Get anyOf
   * @return anyOf
  **/
  @ApiModelProperty(value = "")
  public List<JsonSchema4> getAnyOf() {
    return anyOf;
  }

  public void setAnyOf(List<JsonSchema4> anyOf) {
    this.anyOf = anyOf;
  }

  public JsonSchema4 oneOf(List<JsonSchema4> oneOf) {
    this.oneOf = oneOf;
    return this;
  }

  public JsonSchema4 addOneOfItem(JsonSchema4 oneOfItem) {
    if (this.oneOf == null) {
      this.oneOf = new ArrayList<JsonSchema4>();
    }
    this.oneOf.add(oneOfItem);
    return this;
  }

   /**
   * Get oneOf
   * @return oneOf
  **/
  @ApiModelProperty(value = "")
  public List<JsonSchema4> getOneOf() {
    return oneOf;
  }

  public void setOneOf(List<JsonSchema4> oneOf) {
    this.oneOf = oneOf;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    JsonSchema4 jsonSchema4 = (JsonSchema4) o;
    return Objects.equals(this.schema, jsonSchema4.schema) &&
        Objects.equals(this.id, jsonSchema4.id) &&
        Objects.equals(this.title, jsonSchema4.title) &&
        Objects.equals(this.type, jsonSchema4.type) &&
        Objects.equals(this.discriminator, jsonSchema4.discriminator) &&
        Objects.equals(this.description, jsonSchema4.description) &&
        Objects.equals(this.schemaReferencePath, jsonSchema4.schemaReferencePath) &&
        Objects.equals(this.format, jsonSchema4.format) &&
        Objects.equals(this._default, jsonSchema4._default) &&
        Objects.equals(this.multipleOf, jsonSchema4.multipleOf) &&
        Objects.equals(this.maximum, jsonSchema4.maximum) &&
        Objects.equals(this.exclusiveMaximum, jsonSchema4.exclusiveMaximum) &&
        Objects.equals(this.minimum, jsonSchema4.minimum) &&
        Objects.equals(this.exclusiveMinimum, jsonSchema4.exclusiveMinimum) &&
        Objects.equals(this.maxLength, jsonSchema4.maxLength) &&
        Objects.equals(this.minLength, jsonSchema4.minLength) &&
        Objects.equals(this.pattern, jsonSchema4.pattern) &&
        Objects.equals(this.maxItems, jsonSchema4.maxItems) &&
        Objects.equals(this.minItems, jsonSchema4.minItems) &&
        Objects.equals(this.uniqueItems, jsonSchema4.uniqueItems) &&
        Objects.equals(this.maxProperties, jsonSchema4.maxProperties) &&
        Objects.equals(this.minProperties, jsonSchema4.minProperties) &&
        Objects.equals(this.xml, jsonSchema4.xml) &&
        Objects.equals(this.not, jsonSchema4.not) &&
        Objects.equals(this.additionalItems, jsonSchema4.additionalItems) &&
        Objects.equals(this.additionalProperties, jsonSchema4.additionalProperties) &&
        Objects.equals(this.items, jsonSchema4.items) &&
        Objects.equals(this.required, jsonSchema4.required) &&
        Objects.equals(this.properties, jsonSchema4.properties) &&
        Objects.equals(this.patternProperties, jsonSchema4.patternProperties) &&
        Objects.equals(this.definitions, jsonSchema4.definitions) &&
        Objects.equals(this.xEnumNames, jsonSchema4.xEnumNames) &&
        Objects.equals(this._enum, jsonSchema4._enum) &&
        Objects.equals(this.allOf, jsonSchema4.allOf) &&
        Objects.equals(this.anyOf, jsonSchema4.anyOf) &&
        Objects.equals(this.oneOf, jsonSchema4.oneOf);
  }

  @Override
  public int hashCode() {
    return Objects.hash(schema, id, title, type, discriminator, description, schemaReferencePath, format, _default, multipleOf, maximum, exclusiveMaximum, minimum, exclusiveMinimum, maxLength, minLength, pattern, maxItems, minItems, uniqueItems, maxProperties, minProperties, xml, not, additionalItems, additionalProperties, items, required, properties, patternProperties, definitions, xEnumNames, _enum, allOf, anyOf, oneOf);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class JsonSchema4 {\n");
    
    sb.append("    schema: ").append(toIndentedString(schema)).append("\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    title: ").append(toIndentedString(title)).append("\n");
    sb.append("    type: ").append(toIndentedString(type)).append("\n");
    sb.append("    discriminator: ").append(toIndentedString(discriminator)).append("\n");
    sb.append("    description: ").append(toIndentedString(description)).append("\n");
    sb.append("    schemaReferencePath: ").append(toIndentedString(schemaReferencePath)).append("\n");
    sb.append("    format: ").append(toIndentedString(format)).append("\n");
    sb.append("    _default: ").append(toIndentedString(_default)).append("\n");
    sb.append("    multipleOf: ").append(toIndentedString(multipleOf)).append("\n");
    sb.append("    maximum: ").append(toIndentedString(maximum)).append("\n");
    sb.append("    exclusiveMaximum: ").append(toIndentedString(exclusiveMaximum)).append("\n");
    sb.append("    minimum: ").append(toIndentedString(minimum)).append("\n");
    sb.append("    exclusiveMinimum: ").append(toIndentedString(exclusiveMinimum)).append("\n");
    sb.append("    maxLength: ").append(toIndentedString(maxLength)).append("\n");
    sb.append("    minLength: ").append(toIndentedString(minLength)).append("\n");
    sb.append("    pattern: ").append(toIndentedString(pattern)).append("\n");
    sb.append("    maxItems: ").append(toIndentedString(maxItems)).append("\n");
    sb.append("    minItems: ").append(toIndentedString(minItems)).append("\n");
    sb.append("    uniqueItems: ").append(toIndentedString(uniqueItems)).append("\n");
    sb.append("    maxProperties: ").append(toIndentedString(maxProperties)).append("\n");
    sb.append("    minProperties: ").append(toIndentedString(minProperties)).append("\n");
    sb.append("    xml: ").append(toIndentedString(xml)).append("\n");
    sb.append("    not: ").append(toIndentedString(not)).append("\n");
    sb.append("    additionalItems: ").append(toIndentedString(additionalItems)).append("\n");
    sb.append("    additionalProperties: ").append(toIndentedString(additionalProperties)).append("\n");
    sb.append("    items: ").append(toIndentedString(items)).append("\n");
    sb.append("    required: ").append(toIndentedString(required)).append("\n");
    sb.append("    properties: ").append(toIndentedString(properties)).append("\n");
    sb.append("    patternProperties: ").append(toIndentedString(patternProperties)).append("\n");
    sb.append("    definitions: ").append(toIndentedString(definitions)).append("\n");
    sb.append("    xEnumNames: ").append(toIndentedString(xEnumNames)).append("\n");
    sb.append("    _enum: ").append(toIndentedString(_enum)).append("\n");
    sb.append("    allOf: ").append(toIndentedString(allOf)).append("\n");
    sb.append("    anyOf: ").append(toIndentedString(anyOf)).append("\n");
    sb.append("    oneOf: ").append(toIndentedString(oneOf)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

