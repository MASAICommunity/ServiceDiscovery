/*
 * MASAI Service Discovery API
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: v1
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package io.swagger.client.api;

import io.swagger.client.ApiException;
import io.swagger.client.model.SearchCriteria;
import io.swagger.client.model.SearchResult;
import org.junit.Test;
import org.junit.Ignore;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for DiscoverySearchEngineApi
 */
@Ignore
public class DiscoverySearchEngineApiTest {

    private final DiscoverySearchEngineApi api = new DiscoverySearchEngineApi();

    
    /**
     * Search for available services at a specific location
     *
     * The MASAI Service Discovery is a key process allowing MASAI Services to be automatically visible by travellers through the use of concierge applications.    Usage example on searching for services that discover public transport services on Nice area that integrate via api:        {        \&quot;discoveryRequest\&quot;: [          {            \&quot;location\&quot;: {              \&quot;minLatitude\&quot;: 43.59491496946722,              \&quot;minLongitude\&quot;: 7.103082476562463,              \&quot;maxLatitude\&quot;: 43.7977308236023,              \&quot;maxLongitude\&quot;: 7.422884722656136,              \&quot;countries\&quot;: [                \&quot;fr\&quot;              ]            },            \&quot;groupOfModule\&quot;: \&quot;public_transport\&quot;,            \&quot;accessKey\&quot;: \&quot;AIzaSyD7q2VfSG9tptzWNegQMNb6lqhkuWFy_k0\&quot;,            \&quot;providers\&quot;: [              \&quot;google\&quot;,              \&quot;apis\&quot;            ],            \&quot;serviceType\&quot;: {              \&quot;discovery\&quot;: \&quot;api\&quot;            }          }        ]      }    Usage example on searching for services that book taxi services in Lisbon area that integrate via application, with price between € 5 and € 15:        {        \&quot;discoveryRequest\&quot;: [          {            \&quot;location\&quot;: {              \&quot;minLatitude\&quot;: 38.699871,              \&quot;minLongitude\&quot;: -9.172442,              \&quot;maxLatitude\&quot;: 38.752289,              \&quot;maxLongitude\&quot;: -9.116601,              \&quot;countries\&quot;: [                \&quot;pt\&quot;              ]            },            \&quot;price\&quot;: {              \&quot;minPrice\&quot;: 5,              \&quot;maxPrice\&quot;: 15            },            \&quot;groupOfModule\&quot;: \&quot;taxi\&quot;,            \&quot;accessKey\&quot;: \&quot;AIzaSyD7q2VfSG9tptzWNegQMNb6lqhkuWFy_k0\&quot;,            \&quot;providers\&quot;: [              \&quot;google\&quot;,              \&quot;apis\&quot;            ],            \&quot;serviceType\&quot;: {              \&quot;booking\&quot;: \&quot;app\&quot;            }          }        ]      }    Usage example on searching for services that book flight services in Berlin area that integrate via web page, with ratings between 2 and 5 stars:        {        \&quot;discoveryRequest\&quot;: [          {            \&quot;location\&quot;: {              \&quot;minLatitude\&quot;: 52.354300665733305,              \&quot;minLongitude\&quot;: 13.068658648437463,              \&quot;maxLatitude\&quot;: 52.68542940506577,              \&quot;maxLongitude\&quot;: 13.696078082031136,              \&quot;countries\&quot;: [                \&quot;de\&quot;              ]            },            \&quot;rating\&quot;: {              \&quot;minRating\&quot;: 2,              \&quot;maxRating\&quot;: 5            },            \&quot;groupOfModule\&quot;: \&quot;flight\&quot;,            \&quot;accessKey\&quot;: \&quot;AIzaSyD7q2VfSG9tptzWNegQMNb6lqhkuWFy_k0\&quot;,            \&quot;providers\&quot;: [              \&quot;google\&quot;,              \&quot;apis\&quot;            ],            \&quot;serviceType\&quot;: {              \&quot;booking\&quot;: \&quot;web\&quot;            }          }        ]      }
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void apiSearchForServiceTest() throws ApiException {
        SearchCriteria discoverApis = null;
        SearchResult response = api.apiSearchForService(discoverApis);

        // TODO: test validations
    }
    
}
