/* 
 * MASAI Service Discovery API
 *
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: v1
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */


using NUnit.Framework;

using System;
using System.Linq;
using System.IO;
using System.Collections.Generic;
using ServiceDiscovery.Api;
using ServiceDiscovery.Model;
using ServiceDiscovery.Client;
using System.Reflection;
using Newtonsoft.Json;

namespace ServiceDiscovery.Test
{
    /// <summary>
    ///  Class for testing SwaggerDocumentPaths
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by Swagger Codegen.
    /// Please update the test case below to test the model.
    /// </remarks>
    [TestFixture]
    public class SwaggerDocumentPathsTests
    {
        // TODO uncomment below to declare an instance variable for SwaggerDocumentPaths
        //private SwaggerDocumentPaths instance;

        /// <summary>
        /// Setup before each test
        /// </summary>
        [SetUp]
        public void Init()
        {
            // TODO uncomment below to create an instance of SwaggerDocumentPaths
            //instance = new SwaggerDocumentPaths();
        }

        /// <summary>
        /// Clean up after each test
        /// </summary>
        [TearDown]
        public void Cleanup()
        {

        }

        /// <summary>
        /// Test an instance of SwaggerDocumentPaths
        /// </summary>
        [Test]
        public void SwaggerDocumentPathsInstanceTest()
        {
            // TODO uncomment below to test "IsInstanceOfType" SwaggerDocumentPaths
            //Assert.IsInstanceOfType<SwaggerDocumentPaths> (instance, "variable 'instance' is a SwaggerDocumentPaths");
        }


        /// <summary>
        /// Test the property 'Undefined'
        /// </summary>
        [Test]
        public void UndefinedTest()
        {
            // TODO unit test for the property 'Undefined'
        }
        /// <summary>
        /// Test the property 'Get'
        /// </summary>
        [Test]
        public void GetTest()
        {
            // TODO unit test for the property 'Get'
        }
        /// <summary>
        /// Test the property 'Post'
        /// </summary>
        [Test]
        public void PostTest()
        {
            // TODO unit test for the property 'Post'
        }
        /// <summary>
        /// Test the property 'Put'
        /// </summary>
        [Test]
        public void PutTest()
        {
            // TODO unit test for the property 'Put'
        }
        /// <summary>
        /// Test the property 'Delete'
        /// </summary>
        [Test]
        public void DeleteTest()
        {
            // TODO unit test for the property 'Delete'
        }
        /// <summary>
        /// Test the property 'Options'
        /// </summary>
        [Test]
        public void OptionsTest()
        {
            // TODO unit test for the property 'Options'
        }
        /// <summary>
        /// Test the property 'Head'
        /// </summary>
        [Test]
        public void HeadTest()
        {
            // TODO unit test for the property 'Head'
        }
        /// <summary>
        /// Test the property 'Patch'
        /// </summary>
        [Test]
        public void PatchTest()
        {
            // TODO unit test for the property 'Patch'
        }

    }

}
