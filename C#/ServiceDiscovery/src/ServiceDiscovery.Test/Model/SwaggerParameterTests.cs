/* 
 * MASAI Service Discovery API
 *
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: v1
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */


using NUnit.Framework;

using System;
using System.Linq;
using System.IO;
using System.Collections.Generic;
using ServiceDiscovery.Api;
using ServiceDiscovery.Model;
using ServiceDiscovery.Client;
using System.Reflection;
using Newtonsoft.Json;

namespace ServiceDiscovery.Test
{
    /// <summary>
    ///  Class for testing SwaggerParameter
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by Swagger Codegen.
    /// Please update the test case below to test the model.
    /// </remarks>
    [TestFixture]
    public class SwaggerParameterTests
    {
        // TODO uncomment below to declare an instance variable for SwaggerParameter
        //private SwaggerParameter instance;

        /// <summary>
        /// Setup before each test
        /// </summary>
        [SetUp]
        public void Init()
        {
            // TODO uncomment below to create an instance of SwaggerParameter
            //instance = new SwaggerParameter();
        }

        /// <summary>
        /// Clean up after each test
        /// </summary>
        [TearDown]
        public void Cleanup()
        {

        }

        /// <summary>
        /// Test an instance of SwaggerParameter
        /// </summary>
        [Test]
        public void SwaggerParameterInstanceTest()
        {
            // TODO uncomment below to test "IsInstanceOfType" SwaggerParameter
            //Assert.IsInstanceOfType<SwaggerParameter> (instance, "variable 'instance' is a SwaggerParameter");
        }


        /// <summary>
        /// Test the property 'Schema'
        /// </summary>
        [Test]
        public void SchemaTest()
        {
            // TODO unit test for the property 'Schema'
        }
        /// <summary>
        /// Test the property 'Id'
        /// </summary>
        [Test]
        public void IdTest()
        {
            // TODO unit test for the property 'Id'
        }
        /// <summary>
        /// Test the property 'Title'
        /// </summary>
        [Test]
        public void TitleTest()
        {
            // TODO unit test for the property 'Title'
        }
        /// <summary>
        /// Test the property 'Type'
        /// </summary>
        [Test]
        public void TypeTest()
        {
            // TODO unit test for the property 'Type'
        }
        /// <summary>
        /// Test the property 'Discriminator'
        /// </summary>
        [Test]
        public void DiscriminatorTest()
        {
            // TODO unit test for the property 'Discriminator'
        }
        /// <summary>
        /// Test the property 'Name'
        /// </summary>
        [Test]
        public void NameTest()
        {
            // TODO unit test for the property 'Name'
        }
        /// <summary>
        /// Test the property '_In'
        /// </summary>
        [Test]
        public void _InTest()
        {
            // TODO unit test for the property '_In'
        }
        /// <summary>
        /// Test the property 'Required'
        /// </summary>
        [Test]
        public void RequiredTest()
        {
            // TODO unit test for the property 'Required'
        }
        /// <summary>
        /// Test the property 'AllowEmptyValue'
        /// </summary>
        [Test]
        public void AllowEmptyValueTest()
        {
            // TODO unit test for the property 'AllowEmptyValue'
        }
        /// <summary>
        /// Test the property 'Schema'
        /// </summary>
        [Test]
        public void JsonSchema4Test()
        {
            // TODO unit test for the property 'Schema'
        }
        /// <summary>
        /// Test the property 'XNullable'
        /// </summary>
        [Test]
        public void XNullableTest()
        {
            // TODO unit test for the property 'XNullable'
        }
        /// <summary>
        /// Test the property 'CollectionFormat'
        /// </summary>
        [Test]
        public void CollectionFormatTest()
        {
            // TODO unit test for the property 'CollectionFormat'
        }
        /// <summary>
        /// Test the property 'Description'
        /// </summary>
        [Test]
        public void DescriptionTest()
        {
            // TODO unit test for the property 'Description'
        }
        /// <summary>
        /// Test the property 'SchemaReferencePath'
        /// </summary>
        [Test]
        public void SchemaReferencePathTest()
        {
            // TODO unit test for the property 'SchemaReferencePath'
        }
        /// <summary>
        /// Test the property 'Format'
        /// </summary>
        [Test]
        public void FormatTest()
        {
            // TODO unit test for the property 'Format'
        }
        /// <summary>
        /// Test the property '_Default'
        /// </summary>
        [Test]
        public void _DefaultTest()
        {
            // TODO unit test for the property '_Default'
        }
        /// <summary>
        /// Test the property 'MultipleOf'
        /// </summary>
        [Test]
        public void MultipleOfTest()
        {
            // TODO unit test for the property 'MultipleOf'
        }
        /// <summary>
        /// Test the property 'Maximum'
        /// </summary>
        [Test]
        public void MaximumTest()
        {
            // TODO unit test for the property 'Maximum'
        }
        /// <summary>
        /// Test the property 'ExclusiveMaximum'
        /// </summary>
        [Test]
        public void ExclusiveMaximumTest()
        {
            // TODO unit test for the property 'ExclusiveMaximum'
        }
        /// <summary>
        /// Test the property 'Minimum'
        /// </summary>
        [Test]
        public void MinimumTest()
        {
            // TODO unit test for the property 'Minimum'
        }
        /// <summary>
        /// Test the property 'ExclusiveMinimum'
        /// </summary>
        [Test]
        public void ExclusiveMinimumTest()
        {
            // TODO unit test for the property 'ExclusiveMinimum'
        }
        /// <summary>
        /// Test the property 'MaxLength'
        /// </summary>
        [Test]
        public void MaxLengthTest()
        {
            // TODO unit test for the property 'MaxLength'
        }
        /// <summary>
        /// Test the property 'MinLength'
        /// </summary>
        [Test]
        public void MinLengthTest()
        {
            // TODO unit test for the property 'MinLength'
        }
        /// <summary>
        /// Test the property 'Pattern'
        /// </summary>
        [Test]
        public void PatternTest()
        {
            // TODO unit test for the property 'Pattern'
        }
        /// <summary>
        /// Test the property 'MaxItems'
        /// </summary>
        [Test]
        public void MaxItemsTest()
        {
            // TODO unit test for the property 'MaxItems'
        }
        /// <summary>
        /// Test the property 'MinItems'
        /// </summary>
        [Test]
        public void MinItemsTest()
        {
            // TODO unit test for the property 'MinItems'
        }
        /// <summary>
        /// Test the property 'UniqueItems'
        /// </summary>
        [Test]
        public void UniqueItemsTest()
        {
            // TODO unit test for the property 'UniqueItems'
        }
        /// <summary>
        /// Test the property 'MaxProperties'
        /// </summary>
        [Test]
        public void MaxPropertiesTest()
        {
            // TODO unit test for the property 'MaxProperties'
        }
        /// <summary>
        /// Test the property 'MinProperties'
        /// </summary>
        [Test]
        public void MinPropertiesTest()
        {
            // TODO unit test for the property 'MinProperties'
        }
        /// <summary>
        /// Test the property 'Xml'
        /// </summary>
        [Test]
        public void XmlTest()
        {
            // TODO unit test for the property 'Xml'
        }
        /// <summary>
        /// Test the property 'Not'
        /// </summary>
        [Test]
        public void NotTest()
        {
            // TODO unit test for the property 'Not'
        }
        /// <summary>
        /// Test the property 'AdditionalItems'
        /// </summary>
        [Test]
        public void AdditionalItemsTest()
        {
            // TODO unit test for the property 'AdditionalItems'
        }
        /// <summary>
        /// Test the property 'AdditionalProperties'
        /// </summary>
        [Test]
        public void AdditionalPropertiesTest()
        {
            // TODO unit test for the property 'AdditionalProperties'
        }
        /// <summary>
        /// Test the property 'Items'
        /// </summary>
        [Test]
        public void ItemsTest()
        {
            // TODO unit test for the property 'Items'
        }
        /// <summary>
        /// Test the property 'Properties'
        /// </summary>
        [Test]
        public void PropertiesTest()
        {
            // TODO unit test for the property 'Properties'
        }
        /// <summary>
        /// Test the property 'PatternProperties'
        /// </summary>
        [Test]
        public void PatternPropertiesTest()
        {
            // TODO unit test for the property 'PatternProperties'
        }
        /// <summary>
        /// Test the property 'Definitions'
        /// </summary>
        [Test]
        public void DefinitionsTest()
        {
            // TODO unit test for the property 'Definitions'
        }
        /// <summary>
        /// Test the property 'XEnumNames'
        /// </summary>
        [Test]
        public void XEnumNamesTest()
        {
            // TODO unit test for the property 'XEnumNames'
        }
        /// <summary>
        /// Test the property '_Enum'
        /// </summary>
        [Test]
        public void _EnumTest()
        {
            // TODO unit test for the property '_Enum'
        }
        /// <summary>
        /// Test the property 'AllOf'
        /// </summary>
        [Test]
        public void AllOfTest()
        {
            // TODO unit test for the property 'AllOf'
        }
        /// <summary>
        /// Test the property 'AnyOf'
        /// </summary>
        [Test]
        public void AnyOfTest()
        {
            // TODO unit test for the property 'AnyOf'
        }
        /// <summary>
        /// Test the property 'OneOf'
        /// </summary>
        [Test]
        public void OneOfTest()
        {
            // TODO unit test for the property 'OneOf'
        }

    }

}
