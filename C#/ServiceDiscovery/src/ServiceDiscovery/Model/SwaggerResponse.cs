/* 
 * MASAI Service Discovery API
 *
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: v1
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */

using System;
using System.Linq;
using System.IO;
using System.Text;
using System.Text.RegularExpressions;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Runtime.Serialization;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using System.ComponentModel.DataAnnotations;
using SwaggerDateConverter = ServiceDiscovery.Client.SwaggerDateConverter;

namespace ServiceDiscovery.Model
{
    /// <summary>
    /// The Swagger response.
    /// </summary>
    [DataContract]
    public partial class SwaggerResponse :  IEquatable<SwaggerResponse>, IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="SwaggerResponse" /> class.
        /// </summary>
        /// <param name="Description">Gets or sets the response&#39;s description..</param>
        /// <param name="Schema">Gets or sets the response schema..</param>
        /// <param name="Headers">Gets or sets the headers..</param>
        /// <param name="XNullable">Sets a value indicating whether the response can be null (use IsNullable() to get a parameter&#39;s nullability)..</param>
        /// <param name="XExpectedSchemas">Gets or sets the expected child schemas of the base schema (can be used for generating enhanced typings/documentation)..</param>
        public SwaggerResponse(string Description = default(string), JsonSchema4 Schema = default(JsonSchema4), Dictionary<string, JsonSchema4> Headers = default(Dictionary<string, JsonSchema4>), bool? XNullable = default(bool?), List<JsonExpectedSchema> XExpectedSchemas = default(List<JsonExpectedSchema>))
        {
            this.Description = Description;
            this.Schema = Schema;
            this.Headers = Headers;
            this.XNullable = XNullable;
            this.XExpectedSchemas = XExpectedSchemas;
        }
        
        /// <summary>
        /// Gets or sets the response&#39;s description.
        /// </summary>
        /// <value>Gets or sets the response&#39;s description.</value>
        [DataMember(Name="description", EmitDefaultValue=false)]
        public string Description { get; set; }

        /// <summary>
        /// Gets or sets the response schema.
        /// </summary>
        /// <value>Gets or sets the response schema.</value>
        [DataMember(Name="schema", EmitDefaultValue=false)]
        public JsonSchema4 Schema { get; set; }

        /// <summary>
        /// Gets or sets the headers.
        /// </summary>
        /// <value>Gets or sets the headers.</value>
        [DataMember(Name="headers", EmitDefaultValue=false)]
        public Dictionary<string, JsonSchema4> Headers { get; set; }

        /// <summary>
        /// Sets a value indicating whether the response can be null (use IsNullable() to get a parameter&#39;s nullability).
        /// </summary>
        /// <value>Sets a value indicating whether the response can be null (use IsNullable() to get a parameter&#39;s nullability).</value>
        [DataMember(Name="x-nullable", EmitDefaultValue=false)]
        public bool? XNullable { get; set; }

        /// <summary>
        /// Gets or sets the expected child schemas of the base schema (can be used for generating enhanced typings/documentation).
        /// </summary>
        /// <value>Gets or sets the expected child schemas of the base schema (can be used for generating enhanced typings/documentation).</value>
        [DataMember(Name="x-expectedSchemas", EmitDefaultValue=false)]
        public List<JsonExpectedSchema> XExpectedSchemas { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            var sb = new StringBuilder();
            sb.Append("class SwaggerResponse {\n");
            sb.Append("  Description: ").Append(Description).Append("\n");
            sb.Append("  Schema: ").Append(Schema).Append("\n");
            sb.Append("  Headers: ").Append(Headers).Append("\n");
            sb.Append("  XNullable: ").Append(XNullable).Append("\n");
            sb.Append("  XExpectedSchemas: ").Append(XExpectedSchemas).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }
  
        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public string ToJson()
        {
            return JsonConvert.SerializeObject(this, Formatting.Indented);
        }

        /// <summary>
        /// Returns true if objects are equal
        /// </summary>
        /// <param name="input">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object input)
        {
            return this.Equals(input as SwaggerResponse);
        }

        /// <summary>
        /// Returns true if SwaggerResponse instances are equal
        /// </summary>
        /// <param name="input">Instance of SwaggerResponse to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(SwaggerResponse input)
        {
            if (input == null)
                return false;

            return 
                (
                    this.Description == input.Description ||
                    (this.Description != null &&
                    this.Description.Equals(input.Description))
                ) && 
                (
                    this.Schema == input.Schema ||
                    (this.Schema != null &&
                    this.Schema.Equals(input.Schema))
                ) && 
                (
                    this.Headers == input.Headers ||
                    this.Headers != null &&
                    this.Headers.SequenceEqual(input.Headers)
                ) && 
                (
                    this.XNullable == input.XNullable ||
                    (this.XNullable != null &&
                    this.XNullable.Equals(input.XNullable))
                ) && 
                (
                    this.XExpectedSchemas == input.XExpectedSchemas ||
                    this.XExpectedSchemas != null &&
                    this.XExpectedSchemas.SequenceEqual(input.XExpectedSchemas)
                );
        }

        /// <summary>
        /// Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            unchecked // Overflow is fine, just wrap
            {
                int hashCode = 41;
                if (this.Description != null)
                    hashCode = hashCode * 59 + this.Description.GetHashCode();
                if (this.Schema != null)
                    hashCode = hashCode * 59 + this.Schema.GetHashCode();
                if (this.Headers != null)
                    hashCode = hashCode * 59 + this.Headers.GetHashCode();
                if (this.XNullable != null)
                    hashCode = hashCode * 59 + this.XNullable.GetHashCode();
                if (this.XExpectedSchemas != null)
                    hashCode = hashCode * 59 + this.XExpectedSchemas.GetHashCode();
                return hashCode;
            }
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<System.ComponentModel.DataAnnotations.ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
