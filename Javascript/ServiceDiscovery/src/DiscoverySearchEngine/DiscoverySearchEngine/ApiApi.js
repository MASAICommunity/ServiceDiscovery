/**
 * MASAI Service Discovery API
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: v1
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 2.3.1
 *
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD. Register as an anonymous module.
    define(['DiscoverySearchEngine/ApiClient', 'DiscoverySearchEngine/DiscoverySearchEngine/SearchCriteria', 'DiscoverySearchEngine/DiscoverySearchEngine/SearchResult'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    module.exports = factory(require('../ApiClient'), require('../DiscoverySearchEngine/SearchCriteria'), require('../DiscoverySearchEngine/SearchResult'));
  } else {
    // Browser globals (root is window)
    if (!root.DiscoverySearchEngine) {
      root.DiscoverySearchEngine = {};
    }
    root.DiscoverySearchEngine.ApiApi = factory(root.DiscoverySearchEngine.ApiClient, root.DiscoverySearchEngine.SearchCriteria, root.DiscoverySearchEngine.SearchResult);
  }
}(this, function(ApiClient, SearchCriteria, SearchResult) {
  'use strict';

  /**
   * Api service.
   * @module DiscoverySearchEngine/DiscoverySearchEngine/ApiApi
   * @version v1
   */

  /**
   * Constructs a new ApiApi. 
   * @alias module:DiscoverySearchEngine/DiscoverySearchEngine/ApiApi
   * @class
   * @param {module:DiscoverySearchEngine/ApiClient} [apiClient] Optional API client implementation to use,
   * default to {@link module:DiscoverySearchEngine/ApiClient#instance} if unspecified.
   */
  var exports = function(apiClient) {
    this.apiClient = apiClient || ApiClient.instance;


    /**
     * Callback function to receive the result of the apiSearchForService operation.
     * @callback module:DiscoverySearchEngine/DiscoverySearchEngine/ApiApi~apiSearchForServiceCallback
     * @param {String} error Error message, if any.
     * @param {module:DiscoverySearchEngine/DiscoverySearchEngine/SearchResult} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Search for available services at a specific location
     * The MASAI Service Discovery is a key process allowing MASAI Services to be automatically visible by travellers through the use of concierge applications.    Usage example on searching for services that discover public transport services on Nice area that integrate via api:        {        \&quot;discoveryRequest\&quot;: [          {            \&quot;location\&quot;: {              \&quot;minLatitude\&quot;: 43.59491496946722,              \&quot;minLongitude\&quot;: 7.103082476562463,              \&quot;maxLatitude\&quot;: 43.7977308236023,              \&quot;maxLongitude\&quot;: 7.422884722656136,              \&quot;countries\&quot;: [                \&quot;fr\&quot;              ]            },            \&quot;groupOfModule\&quot;: \&quot;public_transport\&quot;,            \&quot;accessKey\&quot;: \&quot;AIzaSyD7q2VfSG9tptzWNegQMNb6lqhkuWFy_k0\&quot;,            \&quot;providers\&quot;: [              \&quot;google\&quot;,              \&quot;apis\&quot;            ],            \&quot;serviceType\&quot;: {              \&quot;discovery\&quot;: \&quot;api\&quot;            }          }        ]      }    Usage example on searching for services that book taxi services in Lisbon area that integrate via application, with price between € 5 and € 15:        {        \&quot;discoveryRequest\&quot;: [          {            \&quot;location\&quot;: {              \&quot;minLatitude\&quot;: 38.699871,              \&quot;minLongitude\&quot;: -9.172442,              \&quot;maxLatitude\&quot;: 38.752289,              \&quot;maxLongitude\&quot;: -9.116601,              \&quot;countries\&quot;: [                \&quot;pt\&quot;              ]            },            \&quot;price\&quot;: {              \&quot;minPrice\&quot;: 5,              \&quot;maxPrice\&quot;: 15            },            \&quot;groupOfModule\&quot;: \&quot;taxi\&quot;,            \&quot;accessKey\&quot;: \&quot;AIzaSyD7q2VfSG9tptzWNegQMNb6lqhkuWFy_k0\&quot;,            \&quot;providers\&quot;: [              \&quot;google\&quot;,              \&quot;apis\&quot;            ],            \&quot;serviceType\&quot;: {              \&quot;booking\&quot;: \&quot;app\&quot;            }          }        ]      }    Usage example on searching for services that book flight services in Berlin area that integrate via web page, with ratings between 2 and 5 stars:        {        \&quot;discoveryRequest\&quot;: [          {            \&quot;location\&quot;: {              \&quot;minLatitude\&quot;: 52.354300665733305,              \&quot;minLongitude\&quot;: 13.068658648437463,              \&quot;maxLatitude\&quot;: 52.68542940506577,              \&quot;maxLongitude\&quot;: 13.696078082031136,              \&quot;countries\&quot;: [                \&quot;de\&quot;              ]            },            \&quot;rating\&quot;: {              \&quot;minRating\&quot;: 2,              \&quot;maxRating\&quot;: 5            },            \&quot;groupOfModule\&quot;: \&quot;flight\&quot;,            \&quot;accessKey\&quot;: \&quot;AIzaSyD7q2VfSG9tptzWNegQMNb6lqhkuWFy_k0\&quot;,            \&quot;providers\&quot;: [              \&quot;google\&quot;,              \&quot;apis\&quot;            ],            \&quot;serviceType\&quot;: {              \&quot;booking\&quot;: \&quot;web\&quot;            }          }        ]      }
     * @param {module:DiscoverySearchEngine/DiscoverySearchEngine/SearchCriteria} discoverApis Represent a service discovery object, used to performs search queries
     * @param {module:DiscoverySearchEngine/DiscoverySearchEngine/ApiApi~apiSearchForServiceCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:DiscoverySearchEngine/DiscoverySearchEngine/SearchResult}
     */
    this.apiSearchForService = function(discoverApis, callback) {
      var postBody = discoverApis;

      // verify the required parameter 'discoverApis' is set
      if (discoverApis === undefined || discoverApis === null) {
        throw new Error("Missing the required parameter 'discoverApis' when calling apiSearchForService");
      }


      var pathParams = {
      };
      var queryParams = {
      };
      var collectionQueryParams = {
      };
      var headerParams = {
      };
      var formParams = {
      };

      var authNames = [];
      var contentTypes = ['application/json', 'application/x-www-form-urlencoded'];
      var accepts = ['application/json'];
      var returnType = SearchResult;

      return this.apiClient.callApi(
        '/api/searchForServices', 'POST',
        pathParams, queryParams, collectionQueryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }
  };

  return exports;
}));
