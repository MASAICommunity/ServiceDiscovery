/**
 * MASAI Service Discovery API
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: v1
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 2.3.1
 *
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD. Register as an anonymous module.
    define(['DiscoverySearchEngine/ApiClient'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    module.exports = factory(require('../ApiClient'));
  } else {
    // Browser globals (root is window)
    if (!root.DiscoverySearchEngine) {
      root.DiscoverySearchEngine = {};
    }
    root.DiscoverySearchEngine.SwaggerSecurityScheme = factory(root.DiscoverySearchEngine.ApiClient);
  }
}(this, function(ApiClient) {
  'use strict';




  /**
   * The SwaggerSecurityScheme model module.
   * @module DiscoverySearchEngine/DiscoverySearchEngine/SwaggerSecurityScheme
   * @version v1
   */

  /**
   * Constructs a new <code>SwaggerSecurityScheme</code>.
   * The definition of a security scheme that can be used by the operations.
   * @alias module:DiscoverySearchEngine/DiscoverySearchEngine/SwaggerSecurityScheme
   * @class
   * @param type {module:DiscoverySearchEngine/DiscoverySearchEngine/SwaggerSecurityScheme.TypeEnum} Gets or sets the type of the security scheme.
   */
  var exports = function(type) {
    var _this = this;

    _this['type'] = type;







  };

  /**
   * Constructs a <code>SwaggerSecurityScheme</code> from a plain JavaScript object, optionally creating a new instance.
   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
   * @param {Object} data The plain JavaScript object bearing properties of interest.
   * @param {module:DiscoverySearchEngine/DiscoverySearchEngine/SwaggerSecurityScheme} obj Optional instance to populate.
   * @return {module:DiscoverySearchEngine/DiscoverySearchEngine/SwaggerSecurityScheme} The populated <code>SwaggerSecurityScheme</code> instance.
   */
  exports.constructFromObject = function(data, obj) {
    if (data) {
      obj = obj || new exports();

      if (data.hasOwnProperty('type')) {
        obj['type'] = ApiClient.convertToType(data['type'], 'String');
      }
      if (data.hasOwnProperty('description')) {
        obj['description'] = ApiClient.convertToType(data['description'], 'String');
      }
      if (data.hasOwnProperty('name')) {
        obj['name'] = ApiClient.convertToType(data['name'], 'String');
      }
      if (data.hasOwnProperty('in')) {
        obj['in'] = ApiClient.convertToType(data['in'], 'String');
      }
      if (data.hasOwnProperty('flow')) {
        obj['flow'] = ApiClient.convertToType(data['flow'], 'String');
      }
      if (data.hasOwnProperty('authorizationUrl')) {
        obj['authorizationUrl'] = ApiClient.convertToType(data['authorizationUrl'], 'String');
      }
      if (data.hasOwnProperty('tokenUrl')) {
        obj['tokenUrl'] = ApiClient.convertToType(data['tokenUrl'], 'String');
      }
      if (data.hasOwnProperty('scopes')) {
        obj['scopes'] = ApiClient.convertToType(data['scopes'], {'String': 'String'});
      }
    }
    return obj;
  }

  /**
   * Gets or sets the type of the security scheme.
   * @member {module:DiscoverySearchEngine/DiscoverySearchEngine/SwaggerSecurityScheme.TypeEnum} type
   */
  exports.prototype['type'] = undefined;
  /**
   * Gets or sets the short description for security scheme.
   * @member {String} description
   */
  exports.prototype['description'] = undefined;
  /**
   * Gets or sets the name of the header or query parameter to be used to transmit the API key.
   * @member {String} name
   */
  exports.prototype['name'] = undefined;
  /**
   * Gets or sets the type of the API key.
   * @member {module:DiscoverySearchEngine/DiscoverySearchEngine/SwaggerSecurityScheme.InEnum} in
   */
  exports.prototype['in'] = undefined;
  /**
   * Gets or sets the used by the OAuth2 security scheme.
   * @member {module:DiscoverySearchEngine/DiscoverySearchEngine/SwaggerSecurityScheme.FlowEnum} flow
   */
  exports.prototype['flow'] = undefined;
  /**
   * Gets or sets the authorization URL to be used for this flow.
   * @member {String} authorizationUrl
   */
  exports.prototype['authorizationUrl'] = undefined;
  /**
   * Gets or sets the token URL to be used for this flow. .
   * @member {String} tokenUrl
   */
  exports.prototype['tokenUrl'] = undefined;
  /**
   * Gets the available scopes for the OAuth2 security scheme.
   * @member {Object.<String, String>} scopes
   */
  exports.prototype['scopes'] = undefined;


  /**
   * Allowed values for the <code>type</code> property.
   * @enum {String}
   * @readonly
   */
  exports.TypeEnum = {
    /**
     * value: "Undefined"
     * @const
     */
    "Undefined": "Undefined",
    /**
     * value: "basic"
     * @const
     */
    "basic": "basic",
    /**
     * value: "apiKey"
     * @const
     */
    "apiKey": "apiKey",
    /**
     * value: "oauth2"
     * @const
     */
    "oauth2": "oauth2"  };

  /**
   * Allowed values for the <code>in</code> property.
   * @enum {String}
   * @readonly
   */
  exports.InEnum = {
    /**
     * value: "Undefined"
     * @const
     */
    "Undefined": "Undefined",
    /**
     * value: "query"
     * @const
     */
    "query": "query",
    /**
     * value: "header"
     * @const
     */
    "header": "header"  };

  /**
   * Allowed values for the <code>flow</code> property.
   * @enum {String}
   * @readonly
   */
  exports.FlowEnum = {
    /**
     * value: "undefined"
     * @const
     */
    "undefined": "undefined",
    /**
     * value: "implicit"
     * @const
     */
    "implicit": "implicit",
    /**
     * value: "password"
     * @const
     */
    "password": "password",
    /**
     * value: "application"
     * @const
     */
    "application": "application",
    /**
     * value: "accessCode"
     * @const
     */
    "accessCode": "accessCode"  };


  return exports;
}));


